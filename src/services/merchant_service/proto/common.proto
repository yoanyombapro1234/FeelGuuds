syntax = "proto3";

option go_package = "proto";

package proto;

message Merchant {
	// set of owners who are responsible for this merchant account
	repeated Owner owners = 1;
	string BusinessName = 2;
	string BusinessEmail = 3;
	// employer identification number
	string EmployerID = 4;
	string EstimateAnnualRevenue = 5;
	Address Address = 6;

	enum Items {
		PHYSICAL_ITEMS = 0;
		MENU_ITEMS = 1;
		DONATIONS = 2;
		TICKETS = 3;
		MEMBERSHIPS = 4;
		SERVICES = 5;
	}

	// types of item this merchant is selling
	repeated Items ItemsBeingSold = 7;

	enum FulfillmentOptions {
		SHIP_ITEMS = 0;
		ALLOW_PICKUP = 1;
		ALLOW_DELIVERY = 2;
		ALLOW_SELF_SERVICE = 3;
	}

	// ways in which the merchant aims to fulfill purchases
	repeated FulfillmentOptions FulfillmentOption = 8;

	message Settings {
		PaymentDetails PaymentDetails = 9;

		message Policy {
			string Body = 1;
			string Handle = 2;
			string Title = 3;
		}

		Policy ShopPolicy = 10;
		Policy PrivacyPolicy = 11;
		Policy RefundPolicy = 12;
		Policy ShippingPolicy = 13;
	}

	// shop settings
	Settings ShopSettings = 9;

	enum Causes {
		VOTING_RIGHTS = 0;
		CLIMATE_JUSTICE = 1;
		HEALTHCARE = 2;
		REFUGEE_CRISIS = 3;
		RACIAL_JUSTICE = 4;
		INCOME_GAP = 5;
		GUN_VIOLENCE = 6;
		HUNGER_FOOD_INSECURITY = 7;
		EQUALITY = 8;
		LBGTQ = 9;
		EDUCATION = 10;
		FORCED_CHILD_LABOR = 11;
		CHILD_ABUSE_NEGLECT = 12;
		CIVIL_RIGHTS = 13;
		POVERTY = 14;
	}


	// set of supported causes the merchant adheres to
	repeated Causes SupportedCauses = 10;
	string Bio =  11;
	string Headline = 12;
	string Phone = 13;
	repeated string Tags = 14;
	uint32 StripeConnectedAccountId = 15;

	enum OnboardingStatus {
		FeelGuudOnboarding = 0;
		StripeOnboarding = 1;
		CatalogueOnboarding = 2;
		BCorpOnboarding = 3;
	}

	OnboardingStatus OnboardingState = 16;

	enum MerchantAccountState {
		Active = 0;
		PendingApproval = 1;
		Inactive = 2;
	}

	MerchantAccountState AccountState = 17;

	enum MerchantAccountType {
		Individual = 0;
		Company = 1;
		NonProfit = 2;
		GovernmentEntity = 3;
	}

	MerchantAccountType AccountType = 18;
}


message Owner {
	string FirstName=1;
	string LastName=2;
	string Email=3;
	string Country=4;
}

message Address {
	string Address = 1;
	string Unit = 2;
	string ZipCode = 3;
	string City = 4;
	string State = 5;
	string longitude = 6;
	string lattitude = 7;
}

message PaymentDetails {
	enum CreditCardBrand {
		VISA = 0;
		MASTERCARD = 1;
		DISCOVER = 2;
	}

	repeated CreditCardBrand AcceptedCreditCardBrands = 1;

	enum CurrencyCode {
		USD = 0;
		GBP = 1;
	}

	CurrencyCode PrimaryCurrencyCode = 2;
	// set of currencies the merchant can support
	repeated CurrencyCode EnabledCurrencyCodes = 3;
	uint32 PaymentsAccountID = 4;

	enum DigitalWallets {
		ANDROID_PAY = 0;
		APPLE_PAY = 1;
		GOOGLE_PAY = 2;
		SHOPIFY_PAY = 3;
	}

	repeated DigitalWallets AcceptedDigitalWallets = 5;
}
